import time
import asyncio


def sync_func():
    print("Синхронный запуск")
    time.sleep(1)
    print("Синхронный готово")


#корутина или софункция которую можно исполнять в асинхронной среде
async def async_func():
    print('Асинхронный запуск')
    # ожидаем завершения асинхронной операции длительностью 1 секунду
    await asyncio.sleep(1)
    print('Асинхронный готово!')


#корутина или софункция которую можно исполнять в асинхронной среде
async def main():
    sync_func()
    # ожидаем завершения асинхронной операции
    await async_func()
    # ожидаем завершения асинхронной операции
    await async_func()


# фиксируем время начала выполнения
tm = time.time()
# запускаем асинхронную задачу на выполнение
asyncio.run(main())
print(f'total time elapsed {time.time()-tm}')
print('Выигрыша по времени от асинхронности нет, т.к. асинхронные задачи вызываются последовательно.')
print('Получаем: 1 сек + 1 сек + 1 сек ~ 3 сек')
